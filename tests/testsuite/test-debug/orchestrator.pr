/* CIF PROCESS (295, 56), (150, 75) */
process orchestrator
/* CIF comment (405, 192), (71, 35) */
comment 'Hello';
    /* CIF TEXT (0, 94), (458, 376) */
    dcl seq tastE_Peek_id_list := { 1,2,3,4,5};
    
    dcl fixed FixedString := 'Hello';
    dcl variable VariableString := 'Hello';
    dcl seqboolean SeqBool := { true, false };
    
    dcl seqbool2 SeqBoolFix := { true, false };
    
    dcl seqen SeqEnum := { hello2, world2};
    
    dcl seqen2 SeqEnumFix := { hello, world };
    
    dcl myenum MyEnum := a;
    dcl turlututu MyEnum := a;
    
    dcl check tasTE_Peek_id := 42;
    
    dcl choice Mychoice := c1:TRUE ;
    
    dcl opt SeqOpt := { A TRUE, b FALSE }; -- test optional fields
    dcl somebool boolean := true;
    
    --dcl opt2 SeqOpt := { a somebool, b false }; SHOULD REPORT AND ERROR
    dcl apnd SeqOf2ElemsOrMore := { 5, 6 };
    /* CIF ENDTEXT */
    /* CIF TEXT (629, 124), (267, 78) */
    -- Text area for declarations and comments
    
    dcl forty Enum_With_Values := foo,
           two      Enum_With_Values := bar;
    /* CIF ENDTEXT */
    /* CIF procedure (1273, 175), (106, 35) */
    procedure emptyproc;
    endprocedure;
    /* CIF procedure (1306, 371), (91, 35) */
    procedure numProc;
        /* CIF START (161, 82), (70, 35) */
        START;
            /* CIF decision (161, 137), (70, 50) */
            decision any;
                /* CIF ANSWER (71, 207), (70, 24) */
                ('a'):
                /* CIF ANSWER (161, 207), (70, 24) */
                ('b'):
                /* CIF ANSWER (251, 207), (70, 24) */
                ('c'):
            enddecision;
            /* CIF decision (135, 247), (122, 50) */
            decision num(myenum);
                /* CIF ANSWER (163, 317), (70, 24) */
                else:
            enddecision;
            /* CIF decision (135, 357), (122, 50) */
            decision num(myenum);
                /* CIF ANSWER (163, 427), (70, 24) */
                else:
            enddecision;
            /* CIF return (178, 467), (35, 35) */
            return ;
    endprocedure;
    /* CIF START (596, 224), (80, 36) */
    START;
        /* CIF task (584, 280), (103, 35) */
        task check := '2A'H;
        /* CIF PROCEDURECALL (530, 335), (210, 35) */
        call writeln(num(forty), num(two))
        /* CIF comment (761, 324), (194, 56) */
        comment 'check that num() uses
the actual enumerated value,
not the position';
        /* CIF task (514, 390), (243, 35) */
        task forty := val(4, Enum_With_Values);
        /* CIF decision (601, 440), (70, 50) */
        decision check;
            /* CIF ANSWER (475, 510), (70, 24) */
            (42):
            /* CIF ANSWER (671, 510), (70, 24) */
            else:
                /* CIF PROCEDURECALL (555, 554), (301, 35) */
                call writeln('ERROR, was expecting 42, got ', check);
        enddecision;
        /* CIF task (564, 605), (144, 35) */
        task opt := { B TRUE }
        /* CIF comment (728, 605), (155, 35) */
        comment 'Test optional fields';
        /* CIF decision (575, 655), (122, 50) */
        decision num(myenum);
            /* CIF ANSWER (563, 725), (70, 24) */
            (0):
            /* CIF ANSWER (635, 725), (70, 24) */
            else:
        enddecision;
        /* CIF decision (575, 765), (122, 50) */
        decision num(myenum);
            /* CIF ANSWER (564, 835), (70, 24) */
            (0):
            /* CIF ANSWER (644, 835), (70, 24) */
            else:
        enddecision;
        /* CIF decision (586, 875), (99, 50) */
        decision 'informal'
        /* CIF comment (746, 872), (179, 56) */
        comment 'Informal decision -
check that it is ignored
by the code generator';
            /* CIF ANSWER (572, 945), (70, 33) */
            ('a'):
            /* CIF ANSWER (652, 945), (70, 33) */
            ('2'):
        enddecision;
        /* CIF task (524, 994), (223, 40) */
        task seqboolean := {true, false},
seqboolean := not {true, false};
        /* CIF task (532, 1051), (208, 88) */
        task for x in seqen:
 call writeln(num(x));
 call writeln(num(myenum));
 call writeln(num(myenum));
endfor
        /* CIF comment (774, 1072), (174, 40) */
        comment 'Check that num is not
declared twice';
        /* CIF task (554, 1159), (164, 56) */
        task for x in seqen2:
 call writeln(num(x));
endfor;
        /* CIF task (555, 1233), (162, 56) */
        task for x in seqboolean:
    call writeln(x);
endfor
        /* CIF comment (747, 1238), (168, 38) */
        comment 'FOR with a basic type';
        /* CIF task (525, 1307), (222, 35) */
        task seqboolean := not seqboolean
        /* CIF comment (781, 1304), (279, 35) */
        comment 'check NOT on a SEQUENCE of BOOLEAN';
        /* CIF task (555, 1357), (162, 56) */
        task for x in seqboolean:
    call writeln(x);
endfor;
        /* CIF task (573, 1431), (126, 38) */
        task fixed := 'hello';
        /* CIF task (561, 1484), (149, 35) */
        task variable := 'HELLO';
        /* CIF PROCEDURECALL (548, 1534), (176, 35) */
        call writeln(variable // '!!!');
        /* CIF PROCEDURECALL (500, 1584), (272, 35) */
        call writeln(variable // variable // variable);
        /* CIF task (590, 1634), (91, 35) */
        task seq := {1};
        /* CIF task (559, 1684), (153, 35) */
        task seq := {1} // {2} // {3};
        /* CIF task (550, 1734), (172, 35) */
        task seq := seq // {2} // {1};
        /* CIF task (529, 1789), (214, 35) */
        task seq := {1} // {2,4};
        /* CIF decision (601, 1839), (70, 50) */
        decision any;
            /* CIF ANSWER (508, 1909), (70, 24) */
            ('a'):
                /* CIF PROCEDURECALL (455, 1953), (174, 35) */
                call writeln('Random value a');
            /* CIF ANSWER (693, 1909), (70, 24) */
            ('b'):
                /* CIF PROCEDURECALL (640, 1953), (175, 35) */
                call writeln('Random value b');
        enddecision;
        /* CIF decision (591, 2004), (89, 50) */
        decision myenum
        /* CIF comment (718, 2008), (183, 35) */
        comment 'Check case insensitivity';
            /* CIF ANSWER (528, 2074), (70, 24) */
            (a):
            /* CIF ANSWER (608, 2074), (70, 24) */
            (B):
            /* CIF ANSWER (688, 2074), (70, 24) */
            (c):
            /* CIF ANSWER (768, 2074), (70, 24) */
            (d):
            /* CIF ANSWER (848, 2074), (70, 24) */
            (Ee):
        enddecision;
        /* CIF decision (567, 2114), (138, 50) */
        decision present(choice)
        /* CIF comment (743, 2117), (183, 35) */
        comment 'Check case insensitivity';
            /* CIF ANSWER (555, 2184), (70, 24) */
            (cde2):
            /* CIF ANSWER (635, 2184), (70, 24) */
            ELSE:
        enddecision;
        /* CIF task (565, 2224), (141, 38) */
        task apnd := {5, 6},
apnd := apnd // {7};
        /* CIF NEXTSTATE (578, 2280), (116, 33) */
        NEXTSTATE Wait_for_GUI;
    /* CIF state (1083, 427), (70, 35) */
    state Third;
        /* CIF input (1054, 482), (130, 35) */
        input pulse(myenum);
            /* CIF NEXTSTATE (1062, 532), (113, 35) */
            NEXTSTATE Wait_for_gui;
    endstate;
    /* CIF state (1059, 322), (123, 35) */
    state AnotherState;
        /* CIF input (1053, 377), (130, 35) */
        input pulse(myenum);
            /* CIF NEXTSTATE (1083, 427), (70, 35) */
            NEXTSTATE Third;
    endstate;
    /* CIF state (1063, 119), (116, 33) */
    state Wait_for_GUI;
        /* CIF input (1056, 172), (130, 35) */
        input pulse(myenum);
            /* CIF PROCEDURECALL (994, 222), (253, 35) */
            call writeln('Got PULSE', num(myenum));
            /* CIF output (1041, 272), (160, 35) */
            output telemetry(myenum);
            /* CIF NEXTSTATE (1059, 322), (123, 35) */
            NEXTSTATE AnotherState;
    endstate;
endprocess orchestrator;